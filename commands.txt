./build.py && ./fast-downward.py classical-domains/classical/blocks/probBLOCKS-4-0.pddl --search "astar(symb_hm(2))"
./build.py && ./fast-downward.py classical-domains/classical/blocks/probBLOCKS-4-0.pddl --search "astar(symb_h2())"
./build.py && ./fast-downward.py classical-domains/classical/blocks/probBLOCKS-4-0.pddl --search "astar(symb_h2(transform=adapt_costs(one)))"


h1 TEST
./build.py && ./fast-downward.py classical-domains/classical/zenotravel/pfile2.pddl --search "astar(hm(2,transform=adapt_costs(one)))"
./build.py && ./fast-downward.py classical-domains/classical/zenotravel/pfile2.pddl --search "astar(symb_h2(transform=adapt_costs(one)))"


./build.py && ./fast-downward.py classical-domains/classical-sas/blocks-probBLOCKS-4-0.sas --search "astar(symb_h2())"


links:
https://add-lib.scce.info/assets/doxygen-cudd-documentation/cudd_8h.html
https://www.cs.uleth.ca/~rice/cudd_docs/


dot -Tpng -Gdpi=3000 operators.dot -o operators.png
dot -Tpng -Gdpi=1000 effectBDD.dot -o effectBDD.png
dot -Tpng -Gdpi=1000 goal.dot -o goal.png
dot -Tpng -Gdpi=1000 test.dot -o test.png
dot -Tpng -Gdpi=1000 state_copy.dot -o state_copy.png
dot -Tpng -Gdpi=2000 implicit_preconditionBDD.dot -o implicit_preconditionBDD.png
dot -Tpng -Gdpi=2000 implicit_preconditionBDD_1.dot -o implicit_preconditionBDD_1.png
dot -Tpng -Gdpi=1000 implicit_preconditionBDD_2.dot -o implicit_preconditionBDD_2.png
dot -Tpng -Gdpi=2000 implicit_preconditionBDD_1.dot -o implicit_preconditionBDD_1.png && dot -Tpng -Gdpi=2000 implicit_preconditionBDD_2.dot -o implicit_preconditionBDD_2.png
dot -Tpng -Gdpi=2000 implicit_preconditionBDD_before.dot -o implicit_preconditionBDD_before.png && dot -Tpng -Gdpi=2000 implicit_preconditionBDD_after.dot -o implicit_preconditionBDD_after.png
dot -Tpng -Gdpi=1000 current_state0.dot -o current_state0.png && dot -Tpng -Gdpi=1000 current_state1.dot -o current_state1.png
dot -Tpng -Gdpi=1000 effects2.dot -o effects2.png && dot -Tpng -Gdpi=1000 effects1.dot -o effects1.png
dot -Tpng -Gdpi=1000 state_copy1.dot -o state_copy1.png && dot -Tpng -Gdpi=1000 state_copy2.dot -o state_copy2.png



./build.py && ./fast-downward.py classical-domains/classical/blocks/probBLOCKS-4-0.pddl --search "astar(symb_h2())" && dot -Tpng -Gdpi=2000 operators.dot -o operators.png
